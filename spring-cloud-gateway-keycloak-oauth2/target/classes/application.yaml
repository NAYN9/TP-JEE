
spring:
  cloud:
    discovery:
      enabled: true
    gateway:
      routes:
        - id: r1
          uri: http://localhost:8081/
          predicates:
            - Path= /customers/**
        - id: r2
          uri: http://localhost:8082/
          predicates:
            - Path= /products/**
      globalcors:
        corsconfigurations:
          '[/**]':
            allowed-origins: "http://localhost:4200"
            allowed-headers: "*"
            allowed-methods:
              - GET
              - POST
              - PUT
              - DELETE

  security:
    oauth2:
      client:
        provider:
          my-keycloak-provider:
            issuer-uri: http://localhost:8080/realms/ecom-realm
            # Individual properties can also be provided this way
#            token-uri: http://localhost:8080/realms/ecom-realm/protocol/openid-connect/token
#            authorization-uri: http://localhost:8080/realms/ecom-realm/protocol/openid-connect/auth
#            userinfo-uri: http://localhost:8080/realms/ecom-realm/protocol/openid-connect/userinfo
#            user-name-attribute: preferred_username
        registration:
          keycloak-spring-gateway-client:
            provider: my-keycloak-provider
            scope: openid
            client-id: ecom-client
            client-secret: ZcKAQY2RvVpBO4Ig0O7TW7hn8IwZ71O0
            authorization-grant-type: authorization_code

            #redirect-uri: "{baseUrl}/login/oauth2/code/keycloak"
  application:
    name: "gateway-service"

# Enable these to debug the Authorization flow
logging:
    level:
      org:
        springframework:
          security:
            web: DEBUG
server:
  port: 8888

management:
  endpoints:
    web:
      exposure:
        include: "*"